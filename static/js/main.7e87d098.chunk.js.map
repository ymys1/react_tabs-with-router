{"version":3,"sources":["NavBar.tsx","Home.tsx","Tab.tsx","TabsPage.tsx","PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","isActive","classNames","Home","Tab","tab","selectedTabId","id","title","classnames","TabsPage","tabs","tabId","useParams","selectedTabContent","find","content","map","PageNotFound","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAS,kBAEpB,aADA,CACA,OACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,kBASA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,0BCpBKE,EAAO,kBAClB,oBAAIJ,UAAU,QAAd,wBCSWK,G,KAAuB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,cAExCC,EAEEF,EAFFE,GACAC,EACEH,EADFG,MAGF,OACE,mCACE,oBACE,UAAQ,MACRT,UAAWU,IACT,CAAE,YAAaF,IAAOD,IAH1B,SAME,cAAC,IAAD,CAAMN,GAAE,gBAAWO,GAAnB,SAA0BC,UCfrBE,EAA4B,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KAClCC,EAAUC,cAAVD,MAEFE,EAAkB,UAAGH,EAAKI,MAAK,SAACV,GAAD,OAASA,EAAIE,KAAOK,YAAjC,aAAG,EAAsCI,QAEjE,OACE,qBAAKjB,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGY,EAAKM,KAAI,SAACZ,GAAD,OACR,cAAC,EAAD,CAEEA,IAAKA,EACLC,cAAeM,GAFVP,EAAIE,WAQjB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGa,EAAQE,EAAqB,8BChC3BI,EAAe,kBAC1B,oBAAInB,UAAU,QAAd,6BCQIY,EAAO,CACX,CAAEJ,GAAI,QAASC,MAAO,QAASQ,QAAS,eACxC,CAAET,GAAI,QAASC,MAAO,QAASQ,QAAS,eACxC,CAAET,GAAI,QAASC,MAAO,QAASQ,QAAS,gBAG7BG,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUrB,GAAG,QAEzC,eAAC,IAAD,CAAOoB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUV,KAAMA,MACtC,cAAC,IAAD,CAAOS,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUV,KAAMA,SAGhD,cAAC,IAAD,CAAOS,KAAK,IAAIC,QAAS,cAAC,EAAD,aCxB/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e87d098.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => (\n  /* Also requires <html class=\"has-navbar-fixed-top\"> */\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'is-active': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/tabs\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'is-active': isActive,\n          })}\n        >\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const Home = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { TabType } from './types/TabInterface';\n\ntype Props = {\n  tab: TabType,\n  selectedTabId: string | undefined,\n};\n\nexport const Tab: React.FC<Props> = ({ tab, selectedTabId }) => {\n  const {\n    id,\n    title,\n  } = tab;\n\n  return (\n    <>\n      <li\n        data-cy=\"Tab\"\n        className={classnames(\n          { 'is-active': id === selectedTabId },\n        )}\n      >\n        <Link to={`/tabs/${id}`}>{title}</Link>\n      </li>\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TabType } from './types/TabInterface';\nimport { Tab } from './Tab';\n\ntype Props = {\n  tabs: TabType[]\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  const selectedTabContent = tabs.find((tab) => tab.id === tabId)?.content;\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Tabs page</h1>\n\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.id}\n                tab={tab}\n                selectedTabId={tabId}\n              />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {tabId ? selectedTabContent : 'Please select a tab'}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './NavBar';\nimport { Home } from './Home';\nimport { TabsPage } from './TabsPage';\nimport { PageNotFound } from './PageNotFound';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"tabs\">\n        <Route index element={<TabsPage tabs={tabs} />} />\n        <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n      </Route>\n\n      <Route path=\"*\" element={<PageNotFound />} />\n    </Routes>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}